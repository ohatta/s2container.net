<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ESSR0001" xml:space="preserve">
    <value>{0} not found</value>
  </data>
  <data name="ESSR0002" xml:space="preserve">
    <value>&lt;{0}&gt; expected:&lt;{1}&gt; but actual:&lt;{2}&gt;</value>
  </data>
  <data name="ESSR0003" xml:space="preserve">
    <value>&lt;{0}&gt; unexpected:&lt;{1}&gt;</value>
  </data>
  <data name="ESSR0007" xml:space="preserve">
    <value>{0} should not be null or empty</value>
  </data>
  <data name="ESSR0017" xml:space="preserve">
    <value>Exception occurred, because {0}</value>
  </data>
  <data name="ESSR0026" xml:space="preserve">
    <value>IllegalState({0})</value>
  </data>
  <data name="ESSR0032" xml:space="preserve">
    <value>unexpected {0}</value>
  </data>
  <data name="ESSR0040" xml:space="preserve">
    <value>IOException occurred, because {0}</value>
  </data>
  <data name="ESSR0041" xml:space="preserve">
    <value>{0}''s creation failure, because {1}</value>
  </data>
  <data name="ESSR0042" xml:space="preserve">
    <value>An illegal access was generated by {0}, because {1}</value>
  </data>
  <data name="ESSR0043" xml:space="preserve">
    <value>The target which {0} invoked is illegal, because {1}</value>
  </data>
  <data name="ESSR0044" xml:space="preserve">
    <value>Class not found, details are {0}</value>
  </data>
  <data name="ESSR0045" xml:space="preserve">
    <value>Two or more components({1}) are registered in {0}</value>
  </data>
  <data name="ESSR0046" xml:space="preserve">
    <value>Component({0}) not found</value>
  </data>
  <data name="ESSR0047" xml:space="preserve">
    <value>The circulation reference was occurred in {0}</value>
  </data>
  <data name="ESSR0048" xml:space="preserve">
    <value>The constructor of {0} for args({1}) not found</value>
  </data>
  <data name="ESSR0049" xml:space="preserve">
    <value>The method({1}) of {0} not found</value>
  </data>
  <data name="ESSR0050" xml:space="preserve">
    <value>Can not parse, because {0}</value>
  </data>
  <data name="ESSR0051" xml:space="preserve">
    <value>Variable({0}) not found</value>
  </data>
  <data name="ESSR0052" xml:space="preserve">
    <value>Target of property({0}) not found</value>
  </data>
  <data name="ESSR0053" xml:space="preserve">
    <value>Bad parser configuration, because {0}</value>
  </data>
  <data name="ESSR0054" xml:space="preserve">
    <value>SAXException occured, because {0}</value>
  </data>
  <data name="ESSR0055" xml:space="preserve">
    <value>Resource({0}) not found</value>
  </data>
  <data name="ESSR0056" xml:space="preserve">
    <value>Attribute({1}) of tag({0}) not defined</value>
  </data>
  <data name="ESSR0057" xml:space="preserve">
    <value>Method({1}) of class({0}) not found</value>
  </data>
  <data name="ESSR0058" xml:space="preserve">
    <value>Can not configure constructor of {0}, because {1}</value>
  </data>
  <data name="ESSR0059" xml:space="preserve">
    <value>Can not configure property({1}) of {0}, because {2}</value>
  </data>
  <data name="ESSR0060" xml:space="preserve">
    <value>Can not configure method({1}) of {0}, because {2}</value>
  </data>
  <data name="ESSR0061" xml:space="preserve">
    <value>SystemException occured, because {0}</value>
  </data>
  <data name="ESSR0062" xml:space="preserve">
    <value>Connection is closed</value>
  </data>
  <data name="ESSR0063" xml:space="preserve">
    <value>RollbackException occured, because {0}</value>
  </data>
  <data name="ESSR0064" xml:space="preserve">
    <value>Constructor({1}) of class({0}) not found</value>
  </data>
  <data name="ESSR0065" xml:space="preserve">
    <value>Property({1}) of class({0}) not found</value>
  </data>
  <data name="ESSR0066" xml:space="preserve">
    <value>NamingException occurred, because {0}</value>
  </data>
  <data name="ESSR0067" xml:space="preserve">
    <value>Table({0}) not found</value>
  </data>
  <data name="ESSR0068" xml:space="preserve">
    <value>Column({1}) of Table({0})not found</value>
  </data>
  <data name="ESSR0069" xml:space="preserve">
    <value>Actual class ({1}) is not applicable in defined class ({0})</value>
  </data>
  <data name="ESSR0070" xml:space="preserve">
    <value>Field({1}) of class({0}) not found</value>
  </data>
  <data name="ESSR0071" xml:space="preserve">
    <value>SQLException occured, because {0}</value>
  </data>
  <data name="ESSR0073" xml:space="preserve">
    <value>JScriptException occured, because {0}</value>
  </data>
  <data name="ESSR0074" xml:space="preserve">
    <value>Extension not found in {0}</value>
  </data>
  <data name="ESSR0075" xml:space="preserve">
    <value>The container of ({0}) has not been registered yet.</value>
  </data>
  <data name="ESSR0303" xml:space="preserve">
    <value>Unable to commit, tx={0}</value>
  </data>
  <data name="ESSR0304" xml:space="preserve">
    <value>Already started preparing</value>
  </data>
  <data name="ESSR0305" xml:space="preserve">
    <value>Already prepared</value>
  </data>
  <data name="ESSR0306" xml:space="preserve">
    <value>Already started committing</value>
  </data>
  <data name="ESSR0307" xml:space="preserve">
    <value>Already committed</value>
  </data>
  <data name="ESSR0308" xml:space="preserve">
    <value>Already marked for rollback</value>
  </data>
  <data name="ESSR0309" xml:space="preserve">
    <value>Already started rolling back</value>
  </data>
  <data name="ESSR0310" xml:space="preserve">
    <value>Already rolled back</value>
  </data>
  <data name="ESSR0311" xml:space="preserve">
    <value>No transaction</value>
  </data>
  <data name="ESSR0312" xml:space="preserve">
    <value>Unknown state</value>
  </data>
  <data name="ESSR0313" xml:space="preserve">
    <value>Illegal status: {0}</value>
  </data>
  <data name="ESSR0314" xml:space="preserve">
    <value>Already suspended</value>
  </data>
  <data name="ESSR0315" xml:space="preserve">
    <value>Not suspended</value>
  </data>
  <data name="ESSR0316" xml:space="preserve">
    <value>Nested transactions not supported</value>
  </data>
  <data name="ESSR0317" xml:space="preserve">
    <value>Already associated with another transaction</value>
  </data>
  <data name="ESSR0318" xml:space="preserve">
    <value>TMJOIN is not supported</value>
  </data>
  <data name="ESSR0319" xml:space="preserve">
    <value>{0} is not same {1}</value>
  </data>
  <data name="ESSR0320" xml:space="preserve">
    <value>Status must be RS_SUCCESS</value>
  </data>
  <data name="ESSR0321" xml:space="preserve">
    <value>Status must be RS_PREPARED</value>
  </data>
  <data name="ESSR0322" xml:space="preserve">
    <value>Status must be RS_FAIL or RS_PREPARED</value>
  </data>
  <data name="ESSR0323" xml:space="preserve">
    <value>Status must be RS_SUSPENDED</value>
  </data>
  <data name="ESSR0324" xml:space="preserve">
    <value>Status must be RS_ACTIVE</value>
  </data>
  <data name="ESSR0362" xml:space="preserve">
    <value>Too many rows</value>
  </data>
  <data name="ESSR0363" xml:space="preserve">
    <value>Suspend failure, because {0}</value>
  </data>
  <data name="ESSR0364" xml:space="preserve">
    <value>Resume failure, because {0}</value>
  </data>
  <data name="ISSR0001" xml:space="preserve">
    <value>seasar started</value>
  </data>
  <data name="ISSR0002" xml:space="preserve">
    <value>seasar stopped</value>
  </data>
  <data name="ISSR0003" xml:space="preserve">
    <value>seasar shutdown</value>
  </data>
  <data name="ISSR0005" xml:space="preserve">
    <value>{0} restarted</value>
  </data>
  <data name="WSSR0003" xml:space="preserve">
    <value>&lt;&lt; server side stack trace &gt;&gt;</value>
  </data>
  <data name="WSSR0004" xml:space="preserve">
    <value>&lt;&lt; RemoteException stack trace &gt;&gt;</value>
  </data>
  <data name="WSSR0005" xml:space="preserve">
    <value>Illegal transaction rolledback</value>
  </data>
  <data name="WSSR0006" xml:space="preserve">
    <value>Execution at {0} failovered</value>
  </data>
  <data name="WSSR0007" xml:space="preserve">
    <value>Assign null, because constructorArg({1}) of {0} not found</value>
  </data>
  <data name="WSSR0008" xml:space="preserve">
    <value>Skip setting property, because property({1}) of {0} not found</value>
  </data>
  <data name="WSSR0009" xml:space="preserve">
    <value>The qualifier not applicable as for the aspect is specified by method ({1}) of {0}</value>
  </data>
  <data name="DSSR0001" xml:space="preserve">
    <value>Physical connection closed</value>
  </data>
  <data name="DSSR0002" xml:space="preserve">
    <value>Logical connection closed</value>
  </data>
  <data name="DSSR0003" xml:space="preserve">
    <value>Transaction began</value>
  </data>
  <data name="DSSR0004" xml:space="preserve">
    <value>Transaction committed</value>
  </data>
  <data name="DSSR0005" xml:space="preserve">
    <value>Transaction rolledback</value>
  </data>
  <data name="DSSR0006" xml:space="preserve">
    <value>Physical connection got</value>
  </data>
  <data name="DSSR0007" xml:space="preserve">
    <value>Logical connection got</value>
  </data>
  <data name="ESSR0005" xml:space="preserve">
    <value>Can not acquire section:{1} from {0}</value>
  </data>
  <data name="ESSR0365" xml:space="preserve">
    <value>To open connection is failure. Please check if database is started, connection string, provider.</value>
  </data>
  <data name="ESSR0076" xml:space="preserve">
    <value>Can not configure field of {0}, because {1}</value>
  </data>
</root>